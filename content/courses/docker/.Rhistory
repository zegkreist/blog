geom_line(aes(y = limite_inferior, colour = "Limite Inferior")) +
theme_light()+
labs(x = "Período", y = "Sinistro em R$")+
theme(axis.text.x = element_text(size = 9,  face = "bold"))
acumulado_2019 <- predito[ano_mes >= as_date("2019-01-01")][,.(predito = sum(predito),
limite_inferior = sum(limite_inferior),
limite_superior = sum(limite_superior))]
saida_forecast_sinistro_ind <-   datatable(predito,
extensions = c('Buttons','KeyTable'),
options = list(
autoWidth  = TRUE,
keys       = T,
dom        = 'Bfrtpi',
buttons = list('print', list( extend = 'collection',
buttons = c('csv', 'excel', 'pdf'),
text = 'Download'
)
),
pageLength = 19
)
) %>%
formatRound(
columns = colnames(predito)[
which(colnames(predito) != 'ano_mes')],
mark = ".",
dec.mark = ",",
digits = 2
)
saida_acumulado_sinistro_ind <-   datatable(acumulado_2019,
extensions = c('Buttons','KeyTable'),
options = list(
autoWidth  = TRUE,
keys       = T,
dom        = 'Bfrtip',
buttons = list('print', list( extend = 'collection',
buttons = c('csv', 'excel', 'pdf'),
text = 'Download'
)
)
),
fillContainer = FALSE
) %>%
formatRound(
columns = colnames(acumulado_2019)[
which(colnames(acumulado_2019) != 'ano_mes')],
mark = ".",
dec.mark = ",",
digits = 2
)
saida_forecast_sinistro_ind
g_sinistro_ind
time_series <- sinistro_table_coletivo[,.(Mes,SinistroTotal_individual, SinistroTotal_sompo)]
time_series <- sinistro_table_coletivo[,.(Mes,SinistroTotal_sompo)]
time_series[, log_SinistroTotal := log(SinistroTotal_sompo)]
time_series <- time_series[Mes < as_date("2018-08-01")]
time_series[is.na(time_series)] <- 0
y <- time_series$log_SinistroTotal
ss <- list()
ss <- AddAutoAr(ss, y)
ss <- AddStaticIntercept(ss, y)
#ss <- AddTrig(ss, y, frequencies = c(2,4), period = 12)
ss <- AddSeasonal(ss, y, nseasons = 12)
modelo_selecionado <- bsts(y, state.specification = ss, niter = 5000)
pred <- predict(modelo_selecionado,  horizon = 17, burn = 2500, quantiles = c(.15, .75))
pred_median <- pred$median
intervalo_inferior <- pred$interval[1,]
intervalo_superior <- pred$interval[2,]
predito <- data.table(ano_mes = c("2018-08-01",
"2018-09-01",
"2018-10-01",
"2018-11-01",
"2018-12-01",
"2019-01-01",
"2019-02-01",
"2019-03-01",
"2019-04-01",
"2019-05-01",
"2019-06-01",
"2019-07-01",
"2019-08-01",
"2019-09-01",
"2019-10-01",
"2019-11-01",
"2019-12-01"),
predito = exp(pred_median),
limite_inferior = exp(intervalo_inferior),
limite_superior = exp(intervalo_superior)
)
predito[, ano_mes := as_date(ano_mes)]
#-----------------------------------------------------------------------------------------
primeiro_semestre_2018_sinistro_col <- sum(time_series[Mes >= as_date("2018-01-01") &
Mes <= as_date("2018-06-01")]$SinistroTotal_coletivo)
segundo_semestre_2018_sinistro_col <- sum(time_series[Mes >= as_date("2018-07-01") &
Mes <= as_date("2018-7-01")]$SinistroTotal_coletivo)+
sum(predito[ano_mes >= as_date("2018-08-01") &
ano_mes <= as_date("2018-12-01")]$predito)
primeiro_semestre_2019_sinistro_col <- sum(predito[ano_mes >= as_date("2019-01-01") &
ano_mes <= as_date("2019-06-01")]$predito)
segundo_semestre_2019_sinistro_col <- sum(predito[ano_mes >= as_date("2019-07-01") &
ano_mes <= as_date("2019-12-01")]$predito)
#-----------------------------------------------------------------------------------------
yoy_primeiro_semestre_2019_sinistro_col <- 100*((primeiro_semestre_2019_sinistro_col/ primeiro_semestre_2018_sinistro_col)-1)
yoy_segundo_semestre_2019_sinistro_col <- 100*((segundo_semestre_2019_sinistro_col/ segundo_semestre_2018_sinistro_col)-1)
#-----------------------------------------------------------------------------------------
g_sinistro_col <- ggplot(predito, aes(ano_mes,
text = paste0("Mês: ", substr(ano_mes,1,7),
"<br>",
"Limite Inferior: R$", format(limite_inferior,
big.mark = ".",
decimal.mark = ","),
"<br>",
"Valor Predito: R$", format(predito,
big.mark = ".",
decimal.mark = ","),
"<br>",
"Limite Superior: R$", format(limite_superior,
big.mark = ".",
decimal.mark = ",")
),
group = 1
)
) +
geom_line(aes(y = limite_superior, colour = "Limite Superior")) +
geom_line(aes(y = predito, colour = "Valor Predito"))+
geom_line(aes(y = limite_inferior, colour = "Limite Inferior")) +
theme_light()+
labs(x = "Período", y = "Sinistro em R$")+
theme(axis.text.x = element_text(size = 9,  face = "bold"))
acumulado_2019 <- predito[ano_mes >= as_date("2019-01-01")][,.(predito = sum(predito),
limite_inferior = sum(limite_inferior),
limite_superior = sum(limite_superior))]
saida_forecast_sinistro_col <-   datatable(predito,
extensions = c('Buttons','KeyTable'),
options = list(
autoWidth  = TRUE,
keys       = T,
dom        = 'Bfrtpi',
buttons = list('print', list( extend = 'collection',
buttons = c('csv', 'excel', 'pdf'),
text = 'Download'
)
),
pageLength = 16
)
) %>%
formatRound(
columns = colnames(predito)[
which(colnames(predito) != 'ano_mes')],
mark = ".",
dec.mark = ",",
digits = 2
)
saida_acumulado_sinistro_col <-   datatable(acumulado_2019,
extensions = c('Buttons','KeyTable'),
options = list(
autoWidth  = TRUE,
keys       = T,
dom        = 'Bfrtip',
buttons = list('print', list( extend = 'collection',
buttons = c('csv', 'excel', 'pdf'),
text = 'Download'
)
)
),
fillContainer = FALSE
) %>%
formatRound(
columns = colnames(acumulado_2019)[
which(colnames(acumulado_2019) != 'ano_mes')],
mark = ".",
dec.mark = ",",
digits = 2
)
g_sinistro_col
rm(dados,time_series,time_Series)
gc(reset = T)
#-----------------------------------------------------------------------------------------
time_series <- sinistro_table_coletivo[,.(Mes,SinistroTotal_exceto)]
time_series[, log_SinistroTotal := log(SinistroTotal_exceto)]
time_series <- time_series[Mes < as_date("2018-08-01")]
time_series[is.na(time_series)] <- 0
y <- time_series$log_SinistroTotal
ss <- list()
ss <- AddSemilocalLinearTrend(ss, y)
ss <- AddTrig(ss, y, frequencies = c(2,4), period = 12)
ss <- AddSeasonal(ss, y, nseasons = 12)
modelo_selecionado <- bsts(y, state.specification = ss, niter = 5000)
pred <- predict(modelo_selecionado,  horizon = 17, burn = 2500, quantiles = c(.15, .75))
pred_median <- pred$median
intervalo_inferior <- pred$interval[1,]
intervalo_superior <- pred$interval[2,]
predito <- data.table(ano_mes = c("2018-08-01",
"2018-09-01",
"2018-10-01",
"2018-11-01",
"2018-12-01",
"2019-01-01",
"2019-02-01",
"2019-03-01",
"2019-04-01",
"2019-05-01",
"2019-06-01",
"2019-07-01",
"2019-08-01",
"2019-09-01",
"2019-10-01",
"2019-11-01",
"2019-12-01"),
predito = exp(pred_median),
limite_inferior = exp(intervalo_inferior),
limite_superior = exp(intervalo_superior)
)
predito[, ano_mes := as_date(ano_mes)]
#-----------------------------------------------------------------------------------------
primeiro_semestre_2018_sinistro_ind <- sum(time_series[Mes >= as_date("2018-01-01") &
Mes <= as_date("2018-06-01")]$SinistroTotal_individual)
segundo_semestre_2018_sinistro_ind <- sum(time_series[Mes >= as_date("2018-07-01") &
Mes <= as_date("2018-7-01")]$SinistroTotal_individual)+
sum(predito[ano_mes >= as_date("2018-08-01") &
ano_mes <= as_date("2018-12-01")]$predito)
primeiro_semestre_2019_sinistro_ind <- sum(predito[ano_mes >= as_date("2019-01-01") &
ano_mes <= as_date("2019-06-01")]$predito)
segundo_semestre_2019_sinistro_ind <- sum(predito[ano_mes >= as_date("2019-07-01") &
ano_mes <= as_date("2019-12-01")]$predito)
#-----------------------------------------------------------------------------------------
yoy_primeiro_semestre_2019_sinistro_ind <- 100*((primeiro_semestre_2019_sinistro_ind/ primeiro_semestre_2018_sinistro_ind)-1)
yoy_segundo_semestre_2019_sinistro_ind <- 100*((segundo_semestre_2019_sinistro_ind/ segundo_semestre_2018_sinistro_ind)-1)
#-----------------------------------------------------------------------------------------
g_sinistro_ind <- ggplot(predito, aes(ano_mes,
text = paste0("Mês: ", substr(ano_mes,1,7),
"<br>",
"Limite Inferior: R$", format(limite_inferior,
big.mark = ".",
decimal.mark = ","),
"<br>",
"Valor Predito: R$", format(predito,
big.mark = ".",
decimal.mark = ","),
"<br>",
"Limite Superior: R$", format(limite_superior,
big.mark = ".",
decimal.mark = ",")
),
group = 1
)
) +
geom_line(aes(y = limite_superior, colour = "Limite Superior")) +
geom_line(aes(y = predito, colour = "Valor Predito"))+
geom_line(aes(y = limite_inferior, colour = "Limite Inferior")) +
theme_light()+
labs(x = "Período", y = "Sinistro em R$")+
theme(axis.text.x = element_text(size = 9,  face = "bold"))
acumulado_2019 <- predito[ano_mes >= as_date("2019-01-01")][,.(predito = sum(predito),
limite_inferior = sum(limite_inferior),
limite_superior = sum(limite_superior))]
saida_forecast_sinistro_col_filtrado <-   datatable(predito,
extensions = c('Buttons','KeyTable'),
options = list(
autoWidth  = TRUE,
keys       = T,
dom        = 'Bfrtpi',
buttons = list('print', list( extend = 'collection',
buttons = c('csv', 'excel', 'pdf'),
text = 'Download'
)
),
pageLength = 19
)
) %>%
formatRound(
columns = colnames(predito)[
which(colnames(predito) != 'ano_mes')],
mark = ".",
dec.mark = ",",
digits = 2
)
saida_acumulado_sinistro_ind <-   datatable(acumulado_2019,
extensions = c('Buttons','KeyTable'),
options = list(
autoWidth  = TRUE,
keys       = T,
dom        = 'Bfrtip',
buttons = list('print', list( extend = 'collection',
buttons = c('csv', 'excel', 'pdf'),
text = 'Download'
)
)
),
fillContainer = FALSE
) %>%
formatRound(
columns = colnames(acumulado_2019)[
which(colnames(acumulado_2019) != 'ano_mes')],
mark = ".",
dec.mark = ",",
digits = 2
)
g_sinistro_ind
g_sinistro_ind <- ggplotly(g_sinistro_ind,tooltip = c("text"), dynamicTicks = TRUE)
g_sinistro_ind
library(RMariaDB)
library(dplyr)
library(data.table)
library(stringr)
library(lubridate)
library(DBI)
# conexão com o banco -----------------------------------------------------
con <- DBI::dbConnect(MariaDB(),
user='nrosa',
password='num#@!69',
#dbname= database.,
dbname='DW_GestaoIntegrada_Funcional_dbo',
host='192.168.134.63',
encoding = "latin1",
bigint = "character"
)
# Query -------------------------------------------------------------------
dbExecute(con,
paste0("SET GLOBAL connect_timeout = 600000;
")
)
query <- "
SELECT
NomeGrupoCliente,
EmpresaGrupoCliente,
CETIPO,
DtUtilizacao,
ValorUtilizacao,
CodCETIPO,
CodProcedimento,
PrimeiraDescricaoProcedimento,
DescricaoProcedimento,
CodChaveSGS,
CPFBeneficiario,
DtNascimentoBeneficiario,
SexoBeneficiario,
TipoBeneficiario,
DescricaoProcedimentoOperadora,
CodigoSubfatura,
NomeGrupoCliente,
DtPago
FROM T_FatoUtilizacao WHERE NomeGrupoCliente == 'SOMPO';"
dados <- dbGetQuery(con, query) %>%
setDT()
query <- "
SELECT
NomeGrupoCliente,
EmpresaGrupoCliente,
CETIPO,
DtUtilizacao,
ValorUtilizacao,
CodCETIPO,
CodProcedimento,
PrimeiraDescricaoProcedimento,
DescricaoProcedimento,
CodChaveSGS,
CPFBeneficiario,
DtNascimentoBeneficiario,
SexoBeneficiario,
TipoBeneficiario,
DescricaoProcedimentoOperadora,
CodigoSubfatura,
NomeGrupoCliente,
DtPago
FROM T_FatoUtilizacao WHERE NomeGrupoCliente = 'SOMPO';"
dados <- dbGetQuery(con, query) %>%
setDT()
query <- "
SELECT
NomeGrupoCliente,
EmpresaGrupoCliente,
CETIPO,
DtUtilizacao,
ValorUtilizacao,
CodCETIPO,
CodProcedimento,
PrimeiraDescricaoProcedimento,
DescricaoProcedimento,
CodChaveSGS,
CPFBeneficiario,
DtNascimentoBeneficiario,
SexoBeneficiario,
TipoBeneficiario,
DescricaoProcedimentoOperadora,
CodigoSubfatura,
NomeGrupoCliente,
DtPago
FROM T_FatoUtilizacao WHERE NomeGrupoCliente = 'SOMPO' AND DtUtilizacao > '2018-05-01';"
dados <- dbGetQuery(con, query) %>%
setDT()
library(RMariaDB)
library(dplyr)
library(data.table)
library(stringr)
library(lubridate)
library(DBI)
# conexão com o banco -----------------------------------------------------
con <- DBI::dbConnect(MariaDB(),
user='nrosa',
password='num#@!69',
#dbname= database.,
dbname='DW_GestaoIntegrada_Funcional_dbo',
host='192.168.134.63',
encoding = "latin1",
bigint = "character"
)
# Query -------------------------------------------------------------------
dbExecute(con,
paste0("SET GLOBAL connect_timeout = 600000;
")
)
query <- "
SELECT
NomeGrupoCliente,
EmpresaGrupoCliente,
CETIPO,
DtUtilizacao,
ValorUtilizacao,
CodCETIPO,
CodProcedimento,
PrimeiraDescricaoProcedimento,
DescricaoProcedimento,
CodChaveSGS,
CPFBeneficiario,
DtNascimentoBeneficiario,
SexoBeneficiario,
TipoBeneficiario,
DescricaoProcedimentoOperadora,
CodigoSubfatura,
NomeGrupoCliente,
DtPago
FROM T_FatoUtilizacao WHERE NomeGrupoCliente = 'SOMPO' AND DtUtilizacao > '2018-05-01';"
dados <- dbGetQuery(con, query) %>%
setDT()
cadastro <- fread("cadastro_idgrupo.txt")
cadastro
dados
dados[EmpresaGrupoCliente == "Seguro Saúde Individual", individual := 1,verbose = T]
dados[is.na(individual), individual := 0]
dados
dados
dados[, ano_mes_uti := substr(DtUtilizacao, 1, 7)]
dados[, ano_mes_pago := substr(DtPago, 1, 7)]
dados
sinistr_total_uti_coletivo <- dados[, sinistro = sum(ValorUtilizacao, na.rm = T),
by = .(ano_mes_uti)]
sinistr_total_uti_coletivo <- dados[, .(sinistro = sum(ValorUtilizacao, na.rm = T)),
by = .(ano_mes_uti)]
class(dados$ValorUtilizacao)
dados[, ValorUtilizacao := as.numeric(ValorUtilizacao)]
sinistr_total_uti_coletivo <- dados[, .(sinistro = sum(ValorUtilizacao, na.rm = T)),
by = .(ano_mes_uti)
]
sinistr_total_uti_coletivo
sinistr_total_uti_coletivo <- dados[, .(sinistro = sum(ValorUtilizacao, na.rm = T)),
by = .(ano_mes_pago)
]
sinistr_total_uti_coletivo <- dados[, .(sinistro = sum(ValorUtilizacao, na.rm = T)),
by = .(ano_mes_uti)
]
sinistr_total_uti_coletivo
sinistr_total_pago_coletivo
sinistr_total_pago_coletivo <- dados[, .(sinistro = sum(ValorUtilizacao, na.rm = T)),
by = .(ano_mes_pago)
]
sinistr_total_pago_coletivo
order(sinistr_total_uti_coletivo, ano_mes_uti)
sinistr_total_uti_coletivo
order(sinistr_total_uti_coletivo, ano_mes_uti)
setoder(sinistr_total_uti_coletivo, ano_mes_uti)
setorder(sinistr_total_uti_coletivo, ano_mes_uti)
setorder(sinistr_total_uti_coletivo, ano_mes_uti)
setorder(sinistr_total_pago_coletivo, ano_mes_pago)
sinistr_total_uti_coletivo
sinistr_total_pago_coletivo
rm(dados)
library(RMariaDB)
library(dplyr)
library(data.table)
library(stringr)
library(lubridate)
library(DBI)
# conexão com o banco -----------------------------------------------------
con <- DBI::dbConnect(MariaDB(),
user='nrosa',
password='num#@!69',
#dbname= database.,
dbname='DW_GestaoIntegrada_Funcional_dbo',
host='192.168.134.63',
encoding = "latin1",
bigint = "character"
)
# Query -------------------------------------------------------------------
dbExecute(con,
paste0("SET GLOBAL connect_timeout = 600000;
")
)
query <- "
SELECT
NomeGrupoCliente,
EmpresaGrupoCliente,
DtUtilizacao,
ValorUtilizacao,
PrimeiraDescricaoProcedimento,
DescricaoProcedimento,
CodChaveSGS,
SexoBeneficiario,
TipoBeneficiario,
DtPago
FROM T_FatoUtilizacao WHERE NomeGrupoCliente = 'SOMPO' AND DtUtilizacao > '2016-01-01';"
dados <- dbGetQuery(con, query) %>%
setDT()
